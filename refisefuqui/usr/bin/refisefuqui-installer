#!/bin/bash

######################################################
#                                                    #
#  ReFiSeFuQui                                       #
#    Copyright 2013-2019 Under the GNU GPL2 License  #
#    Fork of Remastersys                             #
#    by Daniel "Nerun" Rodrigues                     #
#                                                    #
#  Remastersys                                       #
#    Copyright 2007-2012 Under the GNU GPL2 License  #
#    Originally Created February 12th, 2007          #
#    by Tony "Fragadelic" Brijeski                   #
#                                                    #
######################################################

# >>>>>>>>>>>>>>>>>>>> revisar da linha 490 em diante

# FUNÇÕES E VARIÁVEIS ## BEGIN ##############################

# carrega arquivo de versão
. /etc/refisefuqui/refisefuqui.version

usoinfo(){
	echo " "
	echo "Uso do Instalador do ReFiSeFuQui $REFISEFUQUIVERSION:"
	echo " "
	echo "   sudo refisefuqui-installer"
	echo " "
	echo "   Bastará seguir as instruções do dialog."
	echo " "
}

# FUNÇÕES E VARIÁVEIS ## END ################################

# checando pra ter certeza de que o script está rodando com privilégios de root

testroot="`whoami`"

if [ "$testroot" != "root" ]; then
    usoinfo # vide função
	echo " Deve ser usado como superusuário. Saindo."
	exit 1
fi

# set options depending on mode - text or gui

testdialog=`which dialog`
DIALOG="`which dialog`"
HEIGHT="17"
WIDTH="50"
MENUHEIGHT="12"
TITLE="--title "
TEXT=""
ENTRY="--inputbox "
MENU="--menu"
YESNO="--yesno "
MSGBOX="--msgbox "
PASSWORD="--passwordbox "
PARTITIONPROG="cfdisk"
TITLETEXT="Instalador ReFiSeFuQui"

if [ "$1" = "gui" -o "$2" = "gui" ]; then
	GUI="$DISPLAY"
fi

if [ "$GUI" != "" ]; then
	testyad=`which yad`

	if [ "$testyad" = "" ]; then
		echo " Yad ausente, será instalado agora."
		apt-get -y -q install yad
		testyad=`which yad`
	fi

	testgparted=`which gparted`
	if [ "$testgparted" = "" ]; then
		echo " Gparted ausente, será instalado agora."
		apt-get -y -q install gparted
	fi

	if [ "$testyad" != "" ]; then
		DIALOGMENU="`which yad` --window-icon=/usr/share/pixmaps/refisefuqui-installer.png --width=600 --height=400 --center"
		DIALOG="`which yad` --window-icon=/usr/share/pixmaps/refisefuqui-installer.png --center --fixed"
		TITLE="--always-print-result --dialog-sep --image=/usr/share/pixmaps/refisefuqui-installer.png --title="
		TEXT="--text="
		ENTRY="--entry "
		ENTRYTEXT="--entry-text "
		MENU="--list --column=Pick --column=Info"
		YESNO=" --button=Sim:0 --button=Não:1 "
		MSGBOX=" --button=Ok:0 "
		PASSWORD="--entry --hide-text "
		testgparted=`which gparted`

		if [ "$testgparted" = "" ]; then
			PARTITIONPROG="xterm -e cfdisk"
		else
			PARTITIONPROG="gparted"
		fi
			TITLETEXT="Instalador ReFiSeFuQui"
	fi
fi

if [ "$DIALOG" = "" ]; then
	echo "Não foi possível encontrar o dialog ou o yad. Saindo."
	exit 1
fi

progressbar() {
	tail -f /usr/bin/refisefuqui-installer | $DIALOG $TITLE"$TITLETEXT" $TEXT"$@" --no-buttons --progress --pulsate --auto-close
}

. /etc/live/config.conf
. /etc/remastersys.conf

if [ "$LIVECDLABEL" != "" ]; then
	TITLETEXT="Instalador do $LIVECDLABEL"
fi

# TEXT MODE #############################################################################################################
if [ "$GUI" = "" ]; then
	#inform them what this is and ask if they want to continue

	$DIALOG $TITLE"$TITLETEXT" $YESNO $TEXT"Este é o instalador do Live CD.\n\nDeseja continuar?" $HEIGHT $WIDTH

	if [ $? != 0 ]; then
		exit 0
	fi

	$DIALOG $TITLE"$TITLETEXT" $YESNO $TEXT"O Instalador usará o idioma e o layout de teclado Português do Brasil por padrão.\n\nVocê deseja instalar com um idioma e layout de teclado diferentes?\n\nO Instalador continuará a usar a língua portuguesa." $HEIGHT $WIDTH

	if [ $? = 0 ]; then
		dpkg-reconfigure locales
		dpkg-reconfigure console-data
		#dpkg-reconfigure console-setup
		dpkg-reconfigure keyboard-configuration
	fi

	$DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Nós precisamos preparar o swap e instalar a partição agora.\n\n$PARTITIONPROG permitirá a você criar as novas pertições.\n\nVocê deve criar ou possuir ao menos 1 partição de sistema e 1 partição de swap.\n\nCaso você já possua as partições configuradas, apenas saia do $PARTITIONPROG e a instalação prosseguirá.\n\nClique OK para continuar." $HEIGHT $WIDTH

	#choose the drive to partition
	DRIVES=`cat /proc/partitions | grep -v loop | grep -v major | grep -v "^$" | awk '{print $4}' | grep -v "[0-9]"`

	for i in $DRIVES; do
		partdrive="$i"
		partdrivesize=`grep -m 1 "$i" /proc/partitions | awk '{print $3}'`
		partdrivemenu="$partdrivemenu $partdrive $partdrivesize"
	done

	$DIALOG $TITLE"$TITLETEXT" $MENU $TEXT"Selecione um drive para particionar.\nSe a única opção que você vê é Sair do Instalador é porque nenhum drive foi localizado." $HEIGHT $WIDTH $MENUHEIGHT Exit "Sair do Instalador" $partdrivemenu 2>/tmp/choice.$$

	if [ "$?" = "0" ]; then
		PARTDRIVE=`cat /tmp/choice.$$`
	else
		PARTDRIVE="Exit"
	fi

	rm /tmp/choice.$$

	if [ "$PARTDRIVE" = "Exit" ]; then
		$DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Saindo do instalador agora." $HEIGHT $WIDTH
		exit 1
	fi

	$PARTITIONPROG /dev/$PARTDRIVE

	#find the swap partition
	TARGETSWAP=`fdisk -l | grep swap | awk '{print $1}' | cut -d "/" -f3`
	#TARGETSWAP=`echo $TARGETSWAP | sed -r "s/\/dev\///g"`

	for i in $TARGETSWAP; do
		swappart="$i"
		swappartsize=`grep -m 1 "$i" /proc/partitions | awk '{print $3}'`
		swappartmenu="$swappartmenu $swappart $swappartsize"
	done

	$DIALOG $TITLE"$TITLETEXT" $MENU $TEXT"Selecione uma partição swap para usar.\nSe a única opção que você vê é Sair do Instalador é porque nenhuma partição swap foi localizada." $HEIGHT $WIDTH $MENUHEIGHT Exit "Sair do Instalador" $swappartmenu 2>/tmp/choice.$$

	if [ "$?" = "0" ]; then
		SWAP=`cat /tmp/choice.$$`
	else
		SWAP="Exit"
	fi

	rm /tmp/choice.$$

	if [ "$SWAP" = "Exit" ]; then
		$DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Saindo do Instalador agora." $HEIGHT $WIDTH
		exit 1
	fi

	#choose the partition to install to
	CKLIVE=`mount | grep "live" | grep -v "loop"  | awk '{print $1}' | awk -F "/" '{print $3}'`
	PARTITIONS=`cat /proc/partitions | grep -v "$CKLIVE" | grep -v "loop" | grep -v "sr0" | awk '{print $4}' | grep "[0-9]"`
	PARTINSTTEMP=`echo $PARTITIONS | sed -r "s/$SWAP//"`
	PARTINST=`echo $PARTINSTTEMP`

	for i in $PARTINST; do
		tempsize=`grep -m 1 "$i" /proc/partitions | awk '{print $3}'`

		if [ "$tempsize" = "1" ]; then
			PARTINST=`echo $PARTINST | sed -r "s/$i//"`
		fi
	done

	for i in $PARTINST; do
		part="$i"
		partsize=`grep -m 1 "$i" /proc/partitions | awk '{print $3}'`
		partmenu="$partmenu $part $partsize"
	done

	$DIALOG $TITLE"$TITLETEXT" $MENU $TEXT"Selecione uma partição para instalar o sistema.\nSe a única opção que você vê é Sair do Instalador é porque nenhuma partição foi localizada." $HEIGHT $WIDTH $MENUHEIGHT Exit "Sair do Instalador" $partmenu 2>/tmp/choice.$$

	if [ "$?" = "0" ]; then
		TARGETPART=`cat /tmp/choice.$$`
	else
		TARGETPART="Exit"
	fi

	rm /tmp/choice.$$

	if [ "$TARGETPART" = "Exit" ]; then
		$DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Saindo do Instalador agora." $HEIGHT $WIDTH
		exit 1
	fi

	#choose filesystem type
	$DIALOG $TITLE"$TITLETEXT" $MENU $TEXT"Selecione o tipo de sistema de arquivos da partição raiz" $HEIGHT $WIDTH $MENUHEIGHT ext2 "Ext2" ext3 "Ext3" ext4 "Ext4" 2>/tmp/choice.$$

	if [ "$?" = "0" ]; then
		FSTYPE=`cat /tmp/choice.$$`
	else
		FSTYPE="ext3"
	fi

	rm /tmp/choice.$$

	HOMEINST=`echo $PARTINST | sed -r "s/$TARGETPART//"`

	for i in $HOMEINST; do
		homepart="$i"
		homepartsize=`grep -m 1 "$i" /proc/partitions | awk '{print $3}'`
		homepartmenu="$homepartmenu $homepart $homepartsize"
	done

	$DIALOG $TITLE"$TITLETEXT" $MENU $TEXT"Selecione uma partição para instalar a pasta /home.\nSe a única opção que você vê é a partição raiz (root), então é porque nenhuma outra partição foi encontrada." $HEIGHT $WIDTH $MENUHEIGHT root "coloque /home na partição raiz" $homepartmenu 2>/tmp/choice.$$

	if [ "$?" = "0" ]; then
		HOMEPART=`cat /tmp/choice.$$`
	else
		HOMEPART="root"
	fi

	rm /tmp/choice.$$

	if [ "$HOMEPART" != "root" ]; then
		#choose filesystem type
		$DIALOG $TITLE"$TITLETEXT" $MENU $TEXT"Selecione o tipo de sistema de arquivos da partição home" $HEIGHT $WIDTH $MENUHEIGHT noformat "Não formate a partição home - não é recomendado a não ser que você saiba o que está fazendo" ext2 "Ext2" ext3 "Ext3" ext4 "Ext4" 2>/tmp/choice.$$

		if [ "$?" = "0" ]; then
			HFSTYPE=`cat /tmp/choice.$$`
		else
			HFSTYPE="ext3"
		fi
			rm /tmp/choice.$$
	fi

	# "NOCONFIGS=\"user-setup" means it is backup mode
	# "" means it is dist mode
	testmode=`grep "NOCONFIGS=\"user-setup" /etc/live/config.conf`

	if [ "$testmode" = "" ]; then
		#root password entry section
		TARGETROOTPASS="1"
		TARGETROOTPASS2="2"

		while [ "$TARGETROOTPASS" != "$TARGETROOTPASS2" ]; do
			$DIALOG $TITLE"$TITLETEXT" $PASSWORD $TEXT"Digite a senha do root." $HEIGHT $WIDTH 2>/tmp/choice.$$

			if [ "$?" = "0" ]; then
				TARGETROOTPASS=`cat /tmp/choice.$$`
			else
				exit 1
			fi

			rm /tmp/choice.$$

			$DIALOG $TITLE"$TITLETEXT" $PASSWORD $TEXT"Digite a senha do root novamente." $HEIGHT $WIDTH 2>/tmp/choice.$$

			if [ "$?" = "0" ]; then
				TARGETROOTPASS2=`cat /tmp/choice.$$`
			else
				exit 1
			fi

			rm /tmp/choice.$$

			if [ "$TARGETROOTPASS" != "$TARGETROOTPASS2" ]; then
				$DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"As senhas não conferem. Tente novamente." $HEIGHT $WIDTH
			fi
		done

		rm /tmp/choice.$$

		#username input secton

		$DIALOG $TITLE"$TITLETEXT" $ENTRY $TEXT"Digite o nome real do novo usuário para ser configurado no sistema instalado." $HEIGHT $WIDTH 2>/tmp/choice.$$

		if [ "$?" = "0" ]; then
			TARGETUSERFULLNAME=`cat /tmp/choice.$$`
		else
			exit 1
		fi

		rm /tmp/choice.$$

		$DIALOG $TITLE"$TITLETEXT" $ENTRY $TEXT"Digite o nome de usuário a ser configurado no sistema instalado.\nApenas letras mínusculas." $HEIGHT $WIDTH 2>/tmp/choice.$$

		if [ "$?" = "0" ]; then
			TARGETUSER=`cat /tmp/choice.$$`
		else
			exit 1
		fi

		rm /tmp/choice.$$

		#make sure its all lowercase just in case
		TARGETUSER="`echo $TARGETUSER | awk '{print tolower ($0)}'`"

		#password entry section

		TARGETPASS="1"
		TARGETPASS2="2"

		while [ "$TARGETPASS" != "$TARGETPASS2" ]; do
			$DIALOG $TITLE"$TITLETEXT" $PASSWORD $TEXT"Digite uma senha para $TARGETUSER." $HEIGHT $WIDTH 2>/tmp/choice.$$

			if [ "$?" = "0" ]; then
				TARGETPASS=`cat /tmp/choice.$$`
			else
				exit 1
			fi

			rm /tmp/choice.$$

			$DIALOG $TITLE"$TITLETEXT" $PASSWORD $TEXT"Redigite a senha de $TARGETUSER para conferência." $HEIGHT $WIDTH 2>/tmp/choice.$$

			if [ "$?" = "0" ]; then
				TARGETPASS2=`cat /tmp/choice.$$`
			else
				exit 1
			fi

			rm /tmp/choice.$$

			if [ "$TARGETPASS" != "$TARGETPASS2" ]; then
				$DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"As senhas não conferem. Tente novamente." $HEIGHT $WIDTH
			fi
		done

		rm /tmp/choice.$$
	fi


	#hostname setup
	$DIALOG $TITLE"$TITLETEXT" $ENTRY $TEXT"Digite o nome do host do sistema instalado" $HEIGHT $WIDTH 2>/tmp/choice.$$

	if [ "$?" = "0" ]; then
		TARGETHOSTNAME=`cat /tmp/choice.$$`
	else
		exit 1
	fi

	rm /tmp/choice.$$

	#grub location

	GrubSelectText() {
		## Blank the array in case this function is being rerun

		GrubMenu=()

		CKLIVE=`mount | grep "live" | grep -v "loop" | awk '{print $1}' | awk -F "/" '{print $3}' | sed -e 's/[0-9]//g'`

		Drives=$(cat /proc/partitions | grep -v "$CKLIVE" | grep -v loop | grep -v "Extended" | grep -v "extended" | grep -v "swap" | grep -v "Swap" | grep -v "Hidden" | grep -v major | grep -v "^$" | awk '{ print $4}')

		for i in $Drives; do
			PartDrive="$i"

			if [ "$(echo "$PartDrive" | grep [0-9] )" = "" ]; then
				GrubMenu=("${GrubMenu[@]}" "$PartDrive" "Master Boot Record (MBR) do disco")
			fi
		done

		GrubMenu=( "${GrubMenu[@]}" "root" "Partição raiz - escolha segura se você usa um gerenciador de boot diferente" "rootmbr" "MBR da partição raiz - isto é o que você deseja para uma instalação via pendrive/USB" )

		#grub location
		$DIALOG $TITLE"$TITLETEXT" $MENU $TEXT"Selecione onde instalar o grub.\n" $HEIGHT $WIDTH $MENUHEIGHT "${GrubMenu[@]}" 2>/tmp/choice.$$

		if [ "$?" = "0" ]; then
			GRUBLOCTEST=`cat /tmp/choice.$$`
		fi

		rm /tmp/choice.$$

		if [ "$GRUBLOCTEST" = "root" ]; then
			GRUBLOCTEXT="partição raiz de $TARGETPART"
			GRUBLOC="/dev/$TARGETPART"
		elif [ "$GRUBLOCTEST" = "rootmbr" ]; then
			GRUBLOCTEXT="mbr da partição raiz de $TARGETPART"
			GRUBLOC="/dev/$PARTDRIVE"
		elif [ "$GRUBLOCTEST" = "" ]; then
			GrubSelectText
			exit 0
		else
			GRUBLOCTEXT="mbr de $GRUBLOCTEST"
			GRUBLOC="/dev/$GRUBLOCTEST"
		fi
	}

	GrubSelectText

	#dpkg-reconfigure tzdata
	#Timezone setting

	$DIALOG $TITLE"$TITLETEXT" $YESNO $TEXT"O relógio de seu sistema está configurado para hora local?\n\nRespondendo não indicará que ele está configurado para UTC." $HEIGHT $WIDTH

	if [ $? = 0 ]; then
		if [ "$(grep "UTC" /etc/adjtime)" != "" ]; then
			sed -i -e "s|UTC|LOCALTIME|g" /etc/adjtime
		fi
	else
		if [ "$(grep "LOCALTIME" /etc/adjtime)" != "" ]; then
			sed -i -e "s|LOCALTIME|UTC|g" /etc/adjtime
		fi
	fi

	cat /usr/share/zoneinfo/zone.tab | awk '{print $3}' | grep "/" | sort > /tmp/refisefuqui.zoneinfo

	for i in `cat /tmp/refisefuqui.zoneinfo`; do
		ZONES="$ZONES $i Timezone"
	done

	rm /tmp/refisefuqui.zoneinfo

	$DIALOG $TITLE"$TITLETEXT" $MENU $TEXT"Selecione uma zona de tempo para seu sistema" $HEIGHT $WIDTH $MENUHEIGHT Exit "Sair do Instalador" $ZONES 2>/tmp/choice.$$

	if [ "$?" = "0" ]; then
		ZONESINFO=`cat /tmp/choice.$$`
	else
		ZONESINFO="Exit"
	fi

	rm /tmp/choice.$$

	if [ "$ZONESINFO" = "Exit" ]; then
		$DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Saindo do Instalador agora." $HEIGHT $WIDTH
		exit 1
	fi

	echo "$ZONESINFO" > /etc/timezone

	cp /usr/share/zoneinfo/$ZONESINFO /etc/localtime

	#$SETLOCALE
	#$SETCONSOLEDATA
	#$SETXSERVER

	if [ "$HOMEPART" != "root" ]; then
		HOMETEXT="$HOMEPART será formatado em $HFSTYPE para uso como /home"
	fi

	if [ "$HFSTYPE" = "noformat" ]; then
		HOMETEXT="$HOMEPART não será formatado, mas será usado como /home"
	fi

	if [ "$testmode" = "" ]; then
		$DIALOG $TITLE"$TITLETEXT" $YESNO $TEXT"Confirme se esta informação está correta.\n\nO novo usuário $TARGETUSER será criado na partição $TARGETPART; o sistema de arquivos é $FSTYPE; o swap será instalado na partição $SWAP; e, o grub será instalado em $GRUBLOCTEXT.\n\nDeseja continuar?" $HEIGHT $WIDTH

		if [ $? != 0 ]; then
			exit 0
		fi
	else
		$DIALOG $TITLE"$TITLETEXT" $YESNO $TEXT"Confirme se esta informação está correta.\nSeu sistema de backup será instalado na partição $TARGETPART; o sistema de arquivos é $FSTYPE; e, o grub será instalado em $GRUBLOCTEXT.\n\nDeseja continuar?" $HEIGHT $WIDTH

		if [ $? != 0 ]; then
			exit 0
		fi
	fi

# END TEXT MODE #########################################################################################################

else

# GUI MODE ##############################################################################################################

#inform them what this is and ask if they want to continue

if [ "$testyad" = "" ]; then
xmessage "Yad não encontrado. Você pode usar em modo linha de comando digitando 'sudo refisefuqui-installer' em uma janela de terminal."
exit 1
fi

$DIALOG $TITLE"$TITLETEXT" $YESNO $TEXT"Este é o Instalador do Live CD.  Deseja continuar?"

if [ $? != 0 ]; then
exit 0
fi

FRONTTEST=`cat /etc/X11/default-display-manager | grep kdm`

if [ "$FRONTTEST" = "" ]; then
FRONTEND="gnome"
else
FRONTEND="kde"
fi

$DIALOG $TITLE"$TITLETEXT" $YESNO $TEXT"O Instalador usará o idioma e o layout de teclado Português do Brasil por padrão.\n\nVocê deseja instalar com um idioma e layout de teclado diferentes?\n\nO Instalador continuará a usar a língua portuguesa."

if [ $? = 0 ]; then

dpkg-reconfigure -f $FRONTEND locales
dpkg-reconfigure -f $FRONTEND console-data
#dpkg-reconfigure -f $FRONTEND console-setup
dpkg-reconfigure -f $FRONTEND keyboard-configuration

fi

#fix for gparted being inhibited by udisks-daemon
killall -KILL udisks-daemon

$DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Nós precisamos preparar o swap e instalar a partição agora.\n\n$PARTITIONPROG permitirá a você criar as novas pertições.\n\nVocê deve criar ou possuir ao menos 1 partição de sistema e 1 partição de swap.\n\nCaso você já possua as partições configuradas, apenas saia do $PARTITIONPROG e a instalação prosseguirá.\n\nClique OK para continuar."

#choose the drive to partition
DRIVES=`cat /proc/partitions | grep -v loop | grep -v major | grep -v "^$" | awk '{print $4}' | grep -v "[0-9]"`

for i in $DRIVES; do
  partdrive="$i"
  partdrivesize=`grep -m 1 "$i" /proc/partitions | awk '{print $3}'`
  partdrivemenu="$partdrivemenu $partdrive $partdrivesize"
done

PARTDRIVE=""
while [ "$PARTDRIVE" = "" ]
do
PARTDRIVE=`$DIALOGMENU $TITLE"$TITLETEXT" $MENU  $TEXT"Selecione um drive para particionar.\nSe a única opção que você vê é Sair do Instalador é porque nenhum drive foi localizado." Exit "Sair do Instalador" $partdrivemenu`
done

PARTDRIVE=`echo $PARTDRIVE | cut -d "|" -f 1`

if [ "$PARTDRIVE" = "Exit" ]; then
  $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Saindo do Instalador agora."
  exit 1
fi

$PARTITIONPROG /dev/$PARTDRIVE

#find the swap partition
TARGETSWAP=`fdisk -l | grep swap | awk '{print $1}' | cut -d "/" -f3`
#TARGETSWAP=`echo $TARGETSWAP | sed -r "s/\/dev\///g"`
for i in $TARGETSWAP; do
 swappart="$i"
 swappartsize=`grep -m 1 "$i" /proc/partitions | awk '{print $3}'`
 swappartmenu="$swappartmenu $swappart $swappartsize"
done

SWAP=""
while [ "$SWAP" = "" ]
do
SWAP=`$DIALOGMENU $TITLE"$TITLETEXT" $MENU  $TEXT"Selecione uma partição swap para usar.\nSe a única opção que você vê é Sair do Instalador é porque nenhuma partição swap foi localizada." Exit "Sair do Instalador" $swappartmenu`
done

SWAP=`echo $SWAP | cut -d "|" -f 1`

if [ "$SWAP" = "Exit" ]; then
  $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Saindo do Instalador agora."
  exit 1
fi


#choose the partition to install to
CKLIVE=`mount | grep "live" | grep -v "loop" | awk '{print $1}' | awk -F "/" '{print $3}'`
PARTITIONS=`cat /proc/partitions | grep -v "$CKLIVE" | grep -v "loop" | grep -v "sr0" | awk '{print $4}' | grep "[0-9]"`
PARTINSTTEMP=`echo $PARTITIONS | sed -r "s/$SWAP//"`
PARTINST=`echo $PARTINSTTEMP`
for i in $PARTINST; do
tempsize=`grep -m 1 "$i" /proc/partitions | awk '{print $3}'`
if [ "$tempsize" = "1" ]; then
PARTINST=`echo $PARTINST | sed -r "s/$i//"`
fi
done


for i in $PARTINST; do
  part="$i"
  partsize=`grep -m 1 "$i" /proc/partitions | awk '{print $3}'`
  partmenu="$partmenu $part $partsize"
done

TARGETPART=""
while [ "$TARGETPART" = "" ]
do
TARGETPART=`$DIALOGMENU $TITLE"$TITLETEXT" $MENU  $TEXT"Selecione uma partição para instalar o sistema.\nSe a única opção que você vê é Sair do Instalador é porque nenhuma partição foi localizada." Exit "Sair do Instalador" $partmenu`
done

TARGETPART=`echo $TARGETPART | cut -d "|" -f 1`

if [ "$TARGETPART" = "Exit" ]; then
  $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Saindo do Instalador agora."
  exit 1
fi
FSTYPE=""
while [ "$FSTYPE" = "" ]
do
FSTYPE=`$DIALOGMENU $TITLE"$TITLETEXT" $MENU  $TEXT"Selecione o tipo de sistema de arquivos da partição raiz" ext2 "Ext2" ext3 "Ext3" ext4 "Ext4"`
done

FSTYPE=`echo $FSTYPE | cut -d "|" -f 1`


HOMEINST=`echo $PARTINST | sed -r "s/$TARGETPART//"`
for i in $HOMEINST; do
  homepart="$i"
  homepartsize=`grep -m 1 "$i" /proc/partitions | awk '{print $3}'`
  homepartmenu="$homepartmenu $homepart $homepartsize"
done

HOMEPART=""
while [ "$HOMEPART" = "" ]
do
HOMEPART=`$DIALOGMENU $TITLE"$TITLETEXT" $MENU  $TEXT"Selecione uma partição para instalar a pasta /home.\nSe a única opção que você vê é a partição raiz (root), então é porque nenhuma outra partição foi encontrada." root "coloque /home na partição raiz" $homepartmenu`
done

HOMEPART=`echo $HOMEPART | cut -d "|" -f 1`

if [ "$HOMEPART" != "root" ]; then
HFSTYPE=""
while [ "$HFSTYPE" = "" ]
do
HFSTYPE=`$DIALOGMENU $TITLE"$TITLETEXT" $MENU  $TEXT"Selecione o tipo de sistema de arquivos da partição home" noformat "Não formate a partição home - não é recomendado a não ser que você saiba o que está fazendo" ext2 "Ext2" ext3 "Ext3" ext4 "Ext4"`
done
fi

HFSTYPE=`echo $HFSTYPE | cut -d "|" -f 1`

# "NOCONFIGS=\"user-setup" means it is backup mode
# "" means it is dist mode
testmode=`grep "NOCONFIGS=\"user-setup" /etc/live/config.conf`

if [ "$testmode" = "" ]; then

while [ "$PASSOK" != "Yes" ]; do

CHOICES=`$DIALOGMENU $TITLE"$TITLETEXT" --form \
--field="Senha para o root":H \
--field="Senha para o root (repita)":H \
--field="Nome real do novo usuário" \
--field="Nome do novo usuário" \
--field="Senha para o novo usuário":H \
--field="Senha para o novo usuário (repita)":H \
--field="Nome do Host para o computador"`

if [ "$?" = "0" ]; then
TARGETROOTPASS=`echo $CHOICES | cut -d "|" -f 1`
TARGETROOTPASS2=`echo $CHOICES | cut -d "|" -f 2`
TARGETUSERFULLNAME=`echo $CHOICES | cut -d "|" -f 3`
TARGETUSER=`echo $CHOICES | cut -d "|" -f 4`
TARGETPASS=`echo $CHOICES | cut -d "|" -f 5`
TARGETPASS2=`echo $CHOICES | cut -d "|" -f 6`
TARGETHOSTNAME=`echo $CHOICES | cut -d "|" -f 7`
else
  $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Saindo do Instalador agora."
  exit 1
fi

[ "$TARGETROOTPASS" != "" ] && \
[ "$TARGETROOTPASS" = "$TARGETROOTPASS2" ] && \
[ "$TARGETUSERFULLNAME" != "" ] && \
[ "$TARGETUSER" != "" ] && \
[ "$TARGETUSER" != "$LIVE_USERNAME" ] && \
[ "$TARGETPASS" != "" ] && \
[ "$TARGETPASS" = "$TARGETPASS2" ] && \
[ "$TARGETROOTPASS" != "$TARGETPASS" ] && \
[ "$TARGETHOSTNAME" != "" ] && \
PASSOK="Yes"

[ "$TARGETROOTPASS" = "" ] && $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Senha de Root em branco."

[ "$TARGETROOTPASS" != "$TARGETROOTPASS2" ] && $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Senhas digitadas para o Root não conferem."

[ "$TARGETUSERFULLNAME" = "" ] && $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Nome completo do usuário em branco."

[ "$TARGETUSER" = "" ] && $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Nome de usuário em branco."

[ "$TARGETUSER" = "$LIVE_USERNAME" ] && $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Nome de usuário não pode ser o mesmo do usuário do Live CD."

[ "$TARGETPASS" = "" ] && $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Senha de usuário em branco."

[ "$TARGETPASS" != "$TARGETPASS2" ] && $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Senhas digitadas para o usuário não conferem."

[ "$TARGETROOTPASS" = "$TARGETPASS" ] && $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"As senhas de Root e do usuário são iguais.\n\nUse senhas diferentes."

[ "$TARGETHOSTNAME" = "" ] && $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Nome do Host em branco."


done


fi


#hostname setup
#TARGETHOSTNAME=`$DIALOG $TITLE"$TITLETEXT" $ENTRY $TEXT"Please enter the hostname for the installed system."`


#grub location

GrubSelectGUI () {

GrubMenu=()
CKLIVE=`mount | grep "live" | grep -v "loop" | awk '{print $1}' | awk -F "/" '{print $3}' | sed -e 's/[0-9]//g'`
Drives=$(cat /proc/partitions | grep -v "$CKLIVE" | grep -v loop | grep -v "Extended" | grep -v "extended" | grep -v "swap" | grep -v "Swap" | grep -v "Hidden" | grep -v major | grep -v "^$" | awk '{ print $4}')

for i in $Drives; do
PartDrive="$i"

if [ "$(echo "$PartDrive" | grep [0-9] )" = "" ]; then
 GrubMenu=("${GrubMenu[@]}" "$PartDrive" "Master Boot Record do disco")
fi
done

GrubMenu=( "${GrubMenu[@]}" "root" "Partição raiz - escolha segura se você usa um gerenciador de boot diferente" "rootmbr" "MBR da partição raiz - isto é o que você deseja para uma instalação via pendrive/USB" )

#grub location
GRUBLOCTEST=$($DIALOGMENU $TITLE"$TITLETEXT" $MENU $TEXT"Selecione onde instalar o grub.\n" "${GrubMenu[@]}")

ret="$?"

if [ "$ret" = "252" ]; then
 GrubSelectGUI
 exit 0
elif [ "$GRUBLOCTEST" = "" ]; then
 GrubSelectGUI
 exit 0
fi

GRUBLOCTEST=$(echo "$GRUBLOCTEST" | awk -F '|' '{print $1}')

if [ "$GRUBLOCTEST" = "root" ]; then
GRUBLOCTEXT="partição raiz de $TARGETPART"
GRUBLOC="/dev/$TARGETPART"
elif [ "$GRUBLOCTEST" = "rootmbr" ]; then
GRUBLOCTEXT="mbr da partição raiz de $TARGETPART"
GRUBLOC="/dev/$PARTDRIVE"
else
GRUBLOCTEXT="master boot record de $GRUBLOCTEST"
GRUBLOC="/dev/$GRUBLOCTEST"
fi


}

GrubSelectGUI

#Timezone setting

$DIALOG $TITLE"$TITLETEXT" $YESNO $TEXT"O relógio de seu sistema está configurado para hora local?\n\nRespondendo não indicará que ele está configurado para UTC."
if [ $? = 0 ]; then
if [ "$(grep "UTC" /etc/adjtime)" != "" ]; then
 sed -i -e "s|UTC|LOCALTIME|g" /etc/adjtime
fi
else
if [ "$(grep "LOCALTIME" /etc/adjtime)" != "" ]; then
 sed -i -e "s|LOCALTIME|UTC|g" /etc/adjtime
fi
fi

cat /usr/share/zoneinfo/zone.tab | awk '{print $3}' | grep "/" | sort > /tmp/refisefuqui.zoneinfo
for i in `cat /tmp/refisefuqui.zoneinfo`; do
ZONES="$ZONES $i Timezone"
done
rm /tmp/refisefuqui.zoneinfo

ZONESINFO=""
while [ "$ZONESINFO" = "" ]
do
ZONESINFO=`$DIALOGMENU $TITLE"$TITLETEXT" $MENU  $TEXT"Selecione uma zona de tempo para seu sistema" Exit "Sair do Instalador" $ZONES`
done

ZONESINFO=`echo $ZONESINFO | cut -d "|" -f 1`

if [ "$ZONESINFO" = "Exit" ]; then
  $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Saindo do Instalador agora."
  exit 1
fi


echo "$ZONESINFO" > /etc/timezone
cp /usr/share/zoneinfo/$ZONESINFO /etc/localtime

#xterm -e dpkg-reconfigure tzdata
#if [ "$1" = "intl" ]; then
#xterm -e $SETLOCALE
#xterm -e $SETCONSOLEDATA
#xterm -e $SETXSERVER
#fi

if [ "$HOMEPART" != "root" ]; then
HOMETEXT="$HOMEPART será formatado em $HFSTYPE para uso como /home"
fi

if [ "$HFSTYPE" = "noformat" ]; then
HOMETEXT="$HOMEPART não será formatado, mas será usado como /home"
fi

if [ "$testmode" = "" ]; then
$DIALOG $TITLE"$TITLETEXT" $YESNO $TEXT"Confirme se esta informação está correta.\n\nO novo usuário $TARGETUSER será criado na partição $TARGETPART; o sistema de arquivos é $FSTYPE; o swap será instalado na partição $SWAP; e, o grub será instalado em $GRUBLOCTEXT.\n\nDeseja continuar?"
if [ $? != 0 ]; then
  $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Saindo do Instalador agora."
  exit 1

fi
else
$DIALOG $TITLE"$TITLETEXT" $YESNO $TEXT"Confirme se esta informação está correta.\nSeu sistema de backup será instalado na partição $TARGETPART; o sistema de arquivos é $FSTYPE; e, o grub será instalado em $GRUBLOCTEXT.\n\nDeseja continuar?"
if [ $? != 0 ]; then
  $DIALOG $TITLE"$TITLETEXT" $MSGBOX $TEXT"Saindo do Instalador agora."
  exit 1

fi
fi



#END GUI MODE#########################################################################################################################################




fi





#
#
#
#install_to_hd section################################################################################################################################
#
#
#


if [ "$GUI" != "" ]; then
progressbar "Configurando o SWAP agora... Por favor aguarde. \n" &
fi

sleep 2
echo "Preparando a partição swap agora."
mkswap /dev/$SWAP
swapon /dev/$SWAP
if [ "$GUI" != "" ]; then
killall -KILL tail
fi
if [ "$GUI" != "" ]; then
progressbar "Formatando $TARGETPART agora... Por favor aguarde. \n" &
fi
echo "Formatando a partição $TARGETPART agora."

## Preserve kernel options in the new grub system
NewGrubDefLine="$(cat /proc/cmdline | awk -F 'config ' '{print $2}' | awk -F ' BOOT' '{print $1}')"

OldGrubDefLine=$(grep -B 0  "GRUB_CMDLINE_LINUX_DEFAULT=" /etc/default/grub)
OldGrubLine=$(grep -B 0  "GRUB_CMDLINE_LINUX=" /etc/default/grub)
sed -i -e "s/$OldGrubDefLine/GRUB_CMDLINE_LINUX_DEFAULT=\"$NewGrubDefLine\"/g" /etc/default/grub
sed -i -e "s/$OldGrubLine/GRUB_CMDLINE_LINUX=\"\"/g" /etc/default/grub

#make the filesystem and mount the partition on /TARGET
if [ "`mount | grep $TARGETPART`" ]; then
echo "Desmontando e formatando a partição que iremos usar."
umount /dev/$TARGETPART
fi
mke2fs -t $FSTYPE /dev/$TARGETPART
mkdir -p /TARGET
sleep 2
echo "Montando a partição TARGET agora."
mount /dev/$TARGETPART /TARGET -o rw
sleep 2
echo "Usando tune2fs para prevenir as verificações forçadas na inicialização."
tune2fs -c 0 -i 0 /dev/$TARGETPART
rm -rf "/TARGET/lost+found"
if [ "$GUI" != "" ]; then
killall -KILL tail
fi
if [ "$HOMEPART" != "root" ]; then
if [ "$HFSTYPE" != "noformat" ]; then
if [ "$GUI" != "" ]; then
progressbar "Formatando $HOME agora... Por favor aguarde. \n" &
fi
echo "Formatando a partição $HOME agora."
if [ "`mount | grep $HOMEPART`" ]; then
echo "Desmontando e formatando a partição que iremos usar."
umount /dev/$HOMEPART
fi
mke2fs -t $HFSTYPE /dev/$HOMEPART
fi
echo "Montando a partição TARGET agora."
mkdir -p /TARGET/home
mount /dev/$HOMEPART /TARGET/home -o rw
tune2fs -c 0 -i 0 /dev/$HOMEPART
rm -rf "/TARGET/home/lost+found"
sleep 2
# Get fs type for home partition in case the user chose not to format
if [ "$HFSTYPE" = "noformat" ]; then
HFSTYPE=`mount | grep "/dev/$HOMEPART" | awk '{print $5}'`
fi
if [ "$GUI" != "" ]; then
killall -KILL tail
fi

fi

#get the cdrom device for fstab
#TARGETCDROM=`cat /proc/mounts | grep "/live/image" | awk '{print $1}'`
TARGETCDROM="/dev/cdrom"

sleep 1
if [ "$GUI" != "" ]; then
killall -KILL tail
fi

# "NOCONFIGS=\"user-setup" means it is backup mode
# "" means it is dist mode
testmode=`grep "NOCONFIGS=\"user-setup" /etc/live/config.conf`

if [ "$testmode" = "" ]; then
LIVEMODE="DIST"
else
LIVEMODE="BACKUP"
fi

cat > /var/log/refisefuqui-installer.log <<FOO
==============================
ReFiSeFuQui-Installer log file
==============================
LIVEMODE=$LIVEMODE
==============================================================
GUI=$GUI
==============================================================
TARGETUSER=$TARGETUSER
==============================================================
TARGETHOSTNAME=$TARGETHOSTNAME
==============================================================
SWAP=$SWAP
==============================================================
TARGETPART=$TARGETPART
==============================================================
FSTYPE=$FSTYPE
==============================================================
HOMEPART=$HOMEPART
==============================================================
HFSTYPE=$HFSTYPE
==============================================================
GRUBLOC=$GRUBLOC
==============================================================
FOO

echo "==============================================================" >> /var/log/refisefuqui-installer.log
echo "MOUNTS" >> /var/log/refisefuqui-installer.log
echo "==============================================================" >> /var/log/refisefuqui-installer.log
mount >> /var/log/refisefuqui-installer.log
echo "==============================================================" >> /var/log/refisefuqui-installer.log
echo "FDISK listing" >> /var/log/refisefuqui-installer.log
echo "==============================================================" >> /var/log/refisefuqui-installer.log
fdisk -l >> /var/log/refisefuqui-installer.log
echo "==============================================================" >> /var/log/refisefuqui-installer.log
echo "live config listing" >> /var/log/refisefuqui-installer.log
echo "==============================================================" >> /var/log/refisefuqui-installer.log
cat /etc/live/config.conf >> /var/log/refisefuqui-installer.log
echo "==============================================================" >> /var/log/refisefuqui-installer.log
echo "End of Log" >> /var/log/refisefuqui-installer.log
echo "==============================================================" >> /var/log/refisefuqui-installer.log



if [ "$GUI" != "" ]; then
progressbar "Copiando os arquivos para o sistema... Por favor aguarde. \n" &
fi


# copy the live system to the hd
echo "Copiando o sistema do Live CD para o disco rígido."
echo "Isto pode demorar um pouco então por favor seja paciente."



if [ "$HFSTYPE" = "noformat" ]; then
rsync -a / /TARGET --ignore-existing --exclude=/{TARGET,home,live,cdrom,mnt,proc,run,sys,media}
else
rsync -a / /TARGET --ignore-existing --exclude=/{TARGET,live,cdrom,mnt,proc,run,sys,media}
fi

mkdir -p /TARGET/{proc,mnt,run,sys,media/cdrom}

#remove the live installer from the desktop of /etc/skel/Desktop
if [ -f /TARGET/etc/skel/Desktop/refisefuqui-installer.desktop -o -f /TARGET/etc/skel/Desktop/refisefuqui-installer-ked.desktop ]; then
rm -f /TARGET/etc/skel/Desktop/refisefuqui-installer*.desktop
fi

echo "Cópia de arquivos completada."
if [ "$GUI" != "" ]; then
killall -KILL tail
fi
if [ "$GUI" != "" ]; then
progressbar "Executando passos pós-instalação... Por favor aguarde.\n" &
fi
echo "Executando passos pós-instalação."

#prepare the chroot environment for some post install changes
mount -o bind /proc /TARGET/proc
mount -o bind /dev /TARGET/dev
mount -o bind /sys /TARGET/sys
rm -f /TARGET/etc/fstab
rm -f /TARGET/etc/profile.d/zz-live.sh

#create the new fstab
if [ "$HOMEPART" = "root" ]; then
cat > /TARGET/etc/fstab <<FOO
# /etc/fstab: static file system information.
#
# <file system> <mount point>   <type>  <options>       <dump>  <pass>

proc /proc proc defaults 0 0
# /dev/$TARGETPART
/dev/$TARGETPART / $FSTYPE relatime,errors=remount-ro 0 1
# /dev/$SWAP
/dev/$SWAP none swap sw 0 0
# cdrom
$TARGETCDROM /media/cdrom udf,iso9660 user,noauto,exec,utf8 0 0

FOO

else

cat > /TARGET/etc/fstab <<FOO
# /etc/fstab: static file system information.
#
# <file system> <mount point>   <type>  <options>       <dump>  <pass>

proc /proc proc defaults 0 0
# /dev/$TARGETPART
/dev/$TARGETPART / $FSTYPE relatime,errors=remount-ro 0 1
# /dev/$HOMEPART home
/dev/$HOMEPART /home $HFSTYPE relatime 0 0
# /dev/$SWAP
/dev/$SWAP none swap sw 0 0
# cdrom
$TARGETCDROM /media/cdrom udf,iso9660 user,noauto,exec,utf8 0 0

FOO

fi


# remove diverted update-initramfs as live-initramfs makes it a dummy file when booting the livecd
if [ -f /TARGET/usr/sbin/update-initramfs.debian ]; then
rm -f /TARGET/usr/sbin/update-initramfs
fi

# remove diverted update-notifier as it is disabled by live-config
if [ -f /TARGET/usr/lib/update-notifier/apt-check.debian ]; then
rm -f /TARGET/usr/lib/update-notifier/apt-check
fi

# remove diverted anacron as it is disabled by live-config
if [ -f /TARGET/usr/sbin/anacron.debian ]; then
rm -f /TARGET/usr/sbin/anacron
fi

# fix adept_notifier by copying the file we saved when refisefuqui first ran as live-initramfs removes it
if [ -f /TARGET/etc/refisefuqui/adept_notifier_auto.desktop ]; then
mv /TARGET/etc/refisefuqui/adept_notifier_auto.desktop /TARGET/usr/share/autostart/adept_notifier_auto.desktop
fi

# copy trackerd stuff as live-initramfs disables it
if [ -f /TARGET/etc/refisefuqui/tracker-applet.desktop ]; then
mv /TARGET/etc/refisefuqui/tracker-applet.desktop /TARGET/etc/xdg/autostart/tracker-applet.desktop
fi
if [ -f /TARGET/etc/refisefuqui/trackerd.desktop.xdg ]; then
mv /TARGET/etc/refisefuqui/trackerd.desktop.xdg /TARGET/etc/xdg/autostart/trackerd.desktop
fi
if [ -f /TARGET/etc/refisefuqui/trackerd.desktop.share ]; then
mv /TARGET/etc/refisefuqui/trackerd.desktop.share /TARGET/usr/share/autostart/trackerd.desktop
fi

#restore original inittab as live-initramfs changes it
cp /TARGET/usr/share/sysvinit/inittab /TARGET/etc/inittab

#check if this is a backup livecd or a dist livecd
if [ "$TARGETUSER" != "" ]; then

echo "$TARGETHOSTNAME" > /TARGET/etc/hostname
echo "127.0.0.1 localhost" > /TARGET/etc/hosts
echo "127.0.0.1 $TARGETHOSTNAME" >> /TARGET/etc/hosts
touch /TARGET/etc/resolv.conf

#remove autologin from livecd on installed system

#gdm and gdm3 section
if [ -f /TARGET/etc/gdm/gdm.conf ]; then
sed -i -e 's/AutomaticLogin/#AutomaticLogin/g' /TARGET/etc/gdm/gdm.conf
sed -i -e 's/TimedLogin/#TimedLogin/g' /TARGET/etc/gdm/gdm.conf
fi
if [ -f /TARGET/etc/gdm3/daemon.conf ]; then
sed -i -e 's/AutomaticLogin/#AutomaticLogin/g' /TARGET/etc/gdm3/daemon.conf
sed -i -e 's/TimedLogin/#TimedLogin/g' /TARGET/etc/gdm3/daemon.conf
fi

#kde3 and kde4 section
if [ -f /TARGET/etc/default/kdm.d/live-autologin ]; then
rm -f /TARGET/etc/default/kdm.d/live-autologin
fi
if [ -f /TARGET/etc/kde3/kdm/kdmrc ]; then
sed -i -e 's/AutoLogin/#AutoLogin/g' /TARGET/etc/kde3/kdm/kdmrc
sed -i -e 's/AutoReLogin/#AutoReLogin/g' /TARGET/etc/kde3/kdm/kdmrc
fi
if [ -f /TARGET/etc/kde4/kdm/kdmrc ]; then
sed -i -e 's/AutoLogin/#AutoLogin/g' /TARGET/etc/kde4/kdm/kdmrc
sed -i -e 's/AutoReLogin/#AutoReLogin/g' /TARGET/etc/kde4/kdm/kdmrc
fi

#slim section
if [ -f /TARGET/etc/slim.conf ]; then
sed -i -e 's/auto_login/#auto_login/g' /TARGET/etc/slim.conf
sed -i -e 's/default_user/#default_user/g' /TARGET/etc/slim.conf
fi

#lxdm section
if [ -f /TARGET/etc/lxdm/lxdm.conf ]; then
sed -i -e 's/autologin/#autologin/g' /TARGET/etc/lxdm/lxdm.conf
sed -i -e 's/session/#session/g' /TARGET/etc/lxdm/lxdm.conf
fi

#lightdm section
if [ -f /TARGET/etc/lightdm/lightdm.conf ]; then
sed -i -e 's/autologin/#autologin/g' /TARGET/etc/lightdm/lightdm.conf
fi

#cleanup live polkit file from new install
rm -f /TARGET/var/lib/polkit-1/localauthority/10-vendor.d/10-live-cd.pkla

if [ -f /etc/refisefuqui/refisefuqui-installer.conf ]; then
. /etc/refisefuqui/refisefuqui-installer.conf
fi
if [ "$DEFAULTGROUPS" = "" ]; then
DEFAULTGROUPS="audio,cdrom,dialout,floppy,video,plugdev,netdev,sudo"
fi

cat > /TARGET/bin/tempinstallerscript <<FOO
#!/bin/bash

echo -e "$TARGETROOTPASS\n$TARGETROOTPASS\n" | passwd root
userdel -f -r $LIVE_USERNAME
sed -i '/$LIVE_USERNAME/d' /etc/sudoers
groupadd -g 1000 $TARGETUSER
useradd -u 1000 -g 1000 -c "$TARGETUSERFULLNAME,,," -G $DEFAULTGROUPS -s /bin/bash -m $TARGETUSER
echo -e "$TARGETPASS\n$TARGETPASS\n" | passwd $TARGETUSER
dpkg-divert --remove --rename --quiet /usr/lib/update-notifier/apt-check
dpkg-divert --remove --rename --quiet /usr/sbin/update-initramfs
dpkg-divert --remove --rename --quiet /usr/sbin/anacron
update-initramfs -t -c -k $(/bin/uname -r)
shadowconfig on

FOO


else

#echo "$TARGETHOSTNAME" > /TARGET/etc/hostname
#echo "127.0.0.1 localhost" > /TARGET/etc/hosts
#echo "127.0.0.1 $TARGETHOSTNAME" >> /TARGET/etc/hosts
#touch /TARGET/etc/resolv.conf


cat > /TARGET/bin/tempinstallerscript <<FOO
#!/bin/bash

dpkg-divert --remove --rename --quiet /usr/lib/update-notifier/apt-check
dpkg-divert --remove --rename --quiet /usr/sbin/update-initramfs
dpkg-divert --remove --rename --quiet /usr/sbin/anacron
update-initramfs -t -c -k $(uname -r)
for i in `ls -d /home/*`; do

if [ /$i/.config/Thunar/volmanrc ]; then
  sed -i -e 's/FALSE/TRUE/g' /$i/.config/Thunar/volmanrc
  cp -f /$i/.config/volmanrc /root/.config/Thunar/volmanrc
fi

done

FOO


fi

chmod 755 /TARGET/bin/tempinstallerscript
chroot /TARGET /bin/tempinstallerscript
rm /TARGET/bin/tempinstallerscript
rm -rf /TARGET/lib/live
rm -rf /TARGET/etc/live
if [ "$GUI" != "" ]; then
killall -KILL tail
fi
# Setup grub

cat > /tmp/ReFiSeFuQui-Grub-Install << FOO
#!/bin/bash
chroot /TARGET grub-install --force --no-floppy "$GRUBLOC"
chroot /TARGET update-grub
exit 0
FOO

chmod +x /tmp/ReFiSeFuQui-Grub-Install

if [ "$GUI" != "" ]; then
progressbar "Instalando e configurando o grub... Por favor aguarde.\n" &
xterm -e /tmp/ReFiSeFuQui-Grub-Install
sleep 1
rm -rf /tmp/ReFiSeFuQui-Grub-Install
else
echo "Instalando e configurando o grub."
/tmp/ReFiSeFuQui-Grub-Install
sleep 1
rm -rf /tmp/ReFiSeFuQui-Grub-Install
fi

echo "Passos pós-instalação completados."
echo
echo "Desmontando a partição TARGET."
sleep 1
umount /TARGET/proc
sleep 1
umount /TARGET/dev
sleep 1
umount /TARGET/sys
sleep 1
umount /TARGET/home
sleep 1
umount /TARGET
sleep 1

if [ "$GUI" != "" ]; then
killall -KILL tail
fi


$DIALOG $TITLE"$TITLETEXT" $YESNO $TEXT"A instalação foi completada.\n\nSe tudo correu bem você deve ter seu novo sistema instalado e pronto para ser usado.\n\nDeseja reiniciar agora para testar o novo sistema?" $HEIGHT $WIDTH

if [ $? != 0 ]; then
exit 0
else
reboot
fi

