#!/bin/bash

######################################################
#                                                    #
#  ReFiSeFuQui                                       #
#    Copyright 2013 Under the GNU GPL2 License       #
#    Fork of Remastersys                             #
#    by Daniel "Nerun" Rodrigues                     #
#                                                    #
#  Remastersys                                       #
#    Copyright 2007-2012 Under the GNU GPL2 License  #
#    Originally Created February 12th, 2007          #
#    by Tony "Fragadelic" Brijeski                   #
#                                                    #
######################################################

# Using yad for gui calls

DIALOG="`which yad` --width 400 --fixed"
TITLE="--always-print-result --dialog-sep --window-icon=/usr/share/icons/refisefuqui.png --image=/usr/share/icons/remastersys.png --title="
TITLETEXT="ReFiSeFuQui Ferramenta de Inicialização por USB"
TEXT="--text="
ENTRY="--entry "
ENTRYTEXT="--entry-text "
FILESELECTION="--file-selection "
MENU="--list --column=Pick --column=Info"
PASSWORD="--entry --hide-text "


testroot="`whoami`"

if [ "$testroot" != "root" ]; then
remsu $0 &
exit
fi

copymenu () {
if [ "$1" = "(null)" ]; then
  $DIALOG $TITLE"$TITLETEXT" $TEXT"\n\nVocê deve escolher uma unidade USB para usar.  Clique em OK para retornar ao menu principal.\n"
mainmenu
fi
if [ "$2" = "(null)" ]; then
  $DIALOG $TITLE"$TITLETEXT" $TEXT"\n\nVocê deve escolher uma fonte para usar.  Clique em OK para retornar ao menu principal.\n"
mainmenu
fi

$DIALOG $TITLE"$TITLETEXT" $TEXT"\n\nO conteúdo da unidade USB será completamente apagado e\nsubstituído com o Sistema Live Bootável.\n\nVocê não será capaz de desfazer esta operação uma vez iniciada.\n\nDeseja continuar?\n"

if [ $? != 0 ]; then
mainmenu
fi

umount `mount | grep $1 | awk '{print $1}'`

#do the copy
dd if=$2 of=/dev/$1 bs=1M 2>/tmp/remusbprog & pid=$!

PROGTOT=`ls -l $2 | cut -d " " -f 5`
PROGPERCENT=""

while [ "$PROGPERCENT" != "100" ]; do
sleep 1
kill -USR1 $pid
PROGCNT=`tail -n 1 /tmp/remusbprog | grep "(" | cut -d " " -f 1`
if [ "$PROGCNT" = "" ]; then
PROGPERCENT="1"
else
PROGPERCENT=$((100 * $PROGCNT / $PROGTOT))
fi
echo $PROGPERCENT
echo "#$PROGPERCENT %"
done | $DIALOG $TITLE"$TITLETEXT" $TEXT"Copiando para a unidade USB agora.\n\nPor favor aguarde.\n" --no-buttons --progress --auto-close --auto-kill
rm -f /tmp/remusbprog
sync
#killall -KILL tail

$DIALOG $TITLE"$TITLETEXT" $TEXT"\n\nCópia para USB completada.\nClique em OK para retornar ao menu principal.\n"
mainmenu
}


mainmenu () {
DEVS=""
DEVS=`ls -l /dev/disk/by-path/*usb* | grep -v "part" | awk '{print $NF}' | awk -F "/" '{print $NF}'`
if [ "$DEVS" != "" ]; then
for i in $DEVS; do
USBDRIVESIZE=`grep -m 1 "$i" /proc/partitions | awk '{print $3}'`
USBDRIVES="$USBDRIVES!$i-$USBDRIVESIZE"
done
else
  $DIALOG $TITLE"$TITLETEXT" $TEXT"\n\nNenhuma unidade USB encontrada.\n\nInsira uma unidade USB e então\nclique em OK para retornar ao menu principal\nou em Cancelar para sair.\n"
if [ "$?" = "0" ]; then
mainmenu
else
exit
fi
fi

CHOICES=`$DIALOG $TITLE"$TITLETEXT" --form --field="Escolha uma unidade USB:CB" $USBDRIVES --field="Escolha uma Imagem Fonte:FL" --button="Sair:2" --button="Copiar para unidade USB:1"`
retval="$?"

if [ "$retval" = "1" ]; then
USBDRIVE=`echo $CHOICES | cut -d "|" -f 1 | cut -d "-" -f 1`
PICKSOURCE=`echo $CHOICES | cut -d "|" -f 2`
copymenu $USBDRIVE $PICKSOURCE
else
exit
fi
}

mainmenu
